Basic steps to setup a playground.

# imports.
import pygame
from pygame.locals import *

# intiaize the game by calling the init function.
pygame.init()

# set the clock
clock = pygame.time.Clock()


# set the screen to a gui of 500 x 500
display_surface = pygame.display.set_mode((500, 500))


# set the display playground.
pygame.display.set_caption("Playground")


# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# NOTES
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

# ~ ~ ~ ~
# COLORS
# ~ ~ ~ ~ 

# Color objects

pygame.Color(<color of the object represented as a r, g, b value>)

[!] TIP [!]

In order to draw transparent colors into a surface we must create a surface object with the 
.covert_alpha() method, and once things have been drawn to the surface that was converted to covert_alpha
then that surface can be blitted to the main display surface.


# ~ ~ ~ ~
# RECTS
# ~ ~ ~ ~

Pygame has two ways of representing a rectangular areas.

1) A tuple of four integers: 

    (
        x-coordinate of the top left corner,
        y-coordinate of the top left corner,
        the width in pixels,
        the length in pixels
    )

2) Pygame.Rect() object:

    Pygame.Rect(<the tuple of four integers>)

    A feauture of the Rect object is that it gives us some handy tools, for example,
    it allows us to get the right edge of the rectangle accesing the right attribute.

    ---------------------------------------------------------------------------------
    Here is a list of attributes
    ---------------------------------------------------------------------------------
    myRect.left The int value of the X-coordinate of the left side of the rectangle.
    
    myRect.right The int value of the X-coordinate of the right side of the rectangle.
    
    myRect.top The int value of the Y-coordinate of the top side of the rectangle.
    
    myRect.bottom The int value of the Y-coordinate of the bottom side.
    
    myRect.centerx The int value of the X-coordinate of the center of the rectangle.
    
    myRect.centery The int value of the Y-coordinate of the center of the rectangle.
    
    myRect.width The int value of the width of the rectangle.
    
    myRect.height The int value of the height of the rectangle.
    
    myRect.size A tuple of two ints: (width, height)
    
    myRect.topleft A tuple of two ints: (left, top)
    
    myRect.topright A tuple of two ints: (right, top)
    
    myRect.bottomleft A tuple of two ints: (left, bottom)
    
    myRect.bottomright A tuple of two ints: (right, bottom)
    
    myRect.midleft A tuple of two ints: (left, centery)
    
    myRect.midright A tuple of two ints: (right, centery)
    
    myRect.midtop A tuple of two ints: (centerx, top)
    
    myRect.midbottom A tuple of two ints: (centerx, bottom)
    ---------------------------------------------------------------------------------

# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
# Primitive Drawing functions
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

Primitive drawings include: circles, rectangles, ellipses, lines, or individual pixels

